{"version":3,"sources":["fileServer.js","Upload.jsx","index.js"],"names":["FileServer","sendFile","file","callback","Promise","resolve","reject","req","XMLHttpRequest","upload","addEventListener","response","event","lengthComputable","loaded","total","formData","FormData","append","name","open","send","Upload","_ref","children","files","setFiles","useState","progress","setProgress","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","then","prev","catch","err","console","error","multiple","accept","React","createElement","Fragment","toFixed","map","key","type","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wKAAO,MAAMA,EAAa,CACxBC,SAAUA,CAACC,EAAMC,IACR,IAAIC,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,OAAOC,iBAAiB,OAAQ,KAClCP,EAAS,KACTE,EAAQE,EAAII,YAEdJ,EAAIE,OAAOC,iBAAiB,QAAS,KACnCP,EAAS,GACTG,EAAOC,EAAII,YAEbJ,EAAIE,OAAOC,iBAAiB,WAAYE,IACjCA,EAAMC,kBACXV,EAAUS,EAAME,OAASF,EAAMG,MAAS,OAG1C,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQhB,EAAMA,EAAKiB,MACnCZ,EAAIa,KAAK,OAAQ,+CACjBb,EAAIc,KAAKL,MChBR,SAASM,EAAMC,GAAe,IAAdC,SAAEA,GAAUD,EACjC,MAAOE,EAAOC,GAAYC,mBAAS,KAC5BC,EAAUC,GAAeF,mBAAS,IACnCG,aAAEA,EAAYC,cAAEA,GAAkBC,YAAY,CAClDC,OAASC,IAyBb,SAAgBA,EAAeR,EAAUG,GACvC,MAAM3B,EAAOgC,EAAc,GAC3BlC,EAAWC,SAASC,EAAM2B,GACvBM,KAAK,KACJT,EAAUU,GAAS,IAAIA,EAAMlC,MAE9BmC,MAAOC,GAAQC,QAAQC,MAAMF,KA/BHL,CAAOC,EAAeR,EAAUG,GAC3DY,UAAU,EACVC,OAAQ,SAGV,OACEC,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,MAASd,IACNN,EACDmB,IAAAC,cAAA,QAAWb,MAEbY,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAKhB,EAASkB,QAAQ,GAAG,KACxBrB,EAAMsB,IAAK7C,GACVyC,IAAAC,cAAA,MAAII,IAAK9C,EAAKiB,MACXjB,EAAKiB,KAAK,KAAGjB,EAAK+C,SCpB/B,SAASC,IACP,OACEP,IAAAC,cAAA,OAAKO,UAAU,OACbR,IAAAC,cAACtB,EAAM,KACLqB,IAAAC,cAAA,cAAQ,kBAMhB,MAAMQ,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOb,IAAAC,cAACM,EAAG,MAAKE","file":"static/js/main.9597af91.chunk.js","sourcesContent":["export const FileServer = {\n  sendFile: (file, callback) => {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.upload.addEventListener(\"load\", () => {\n        callback(100);\n        resolve(req.response);\n      });\n      req.upload.addEventListener(\"error\", () => {\n        callback(0);\n        reject(req.response);\n      });\n      req.upload.addEventListener(\"progress\", event => {\n        if (!event.lengthComputable) return;\n        callback((event.loaded / event.total) * 100);\n      });\n\n      const formData = new FormData();\n      formData.append(\"file\", file, file.name);\n      req.open(\"POST\", \"https://slash-web-null.herokuapp.com/upload\");\n      req.send(formData);\n    });\n  }\n};\n","import React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { FileServer } from \"./fileServer\";\n\nexport function Upload({ children }) {\n  const [files, setFiles] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: (acceptedFiles) => onDrop(acceptedFiles, setFiles, setProgress),\n    multiple: false,\n    accept: \".mp4\"\n  });\n\n  return (\n    <>\n      <h1>Uploader Example</h1>\n      <div {...getRootProps()}>\n        {children}\n        <input {...getInputProps()} />\n      </div>\n      <h3>See them here</h3>\n      <ul>\n        <li>{progress.toFixed(0)}%</li>\n        {files.map((file) => (\n          <li key={file.name}>\n            {file.name}, {file.type}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nfunction onDrop(acceptedFiles, setFiles, setProgress) {\n  const file = acceptedFiles[0];\n  FileServer.sendFile(file, setProgress)\n    .then(() => {\n      setFiles((prev) => [...prev, file]);\n    })\n    .catch((err) => console.error(err));\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { Upload } from \"./Upload\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Upload>\n        <button>Upload Files</button>\n      </Upload>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}